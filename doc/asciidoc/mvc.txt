MVC и преобразование адресов в контроллеры
------------------------------------------

Рассмотрим разбор URI при запросе:

По умолчанию разделителем компонентов является +/+, однако помимо него можно указать произвольный символ. 
Это бывает полезно в случае, если сайт пишется не с нуля, а используются шаблоны с относительной адресацией и весь сайт находится на одном уровне, тем самым можно использовать старые шаблоны, пока адреса не изменятся.

При разборе адреса он разбивается на компоненты и они анализируются по очереди. Рассмотрим компоненты адреса:

  module/controller/action/p1/p2/p3

  * Первым идет модуль - в папке +application+ ищется папка с именем модуля, если же ее нет, то выбирается модуль по умолчанию (+default+).
  * Контроллер - в текущем модуле в папке +controllers+ проверяется наличие файла +NameСontroller+, если его нет, то используется файл +IndexСontroller+.
  * После подключения файла контроллера проверяется наличие класса +NameСontroller+, а если его нет, то проверяется его наличие в пространстве имен с именем модуля.
  * Если класс не найден, а файл существует, то выводится сообщение об ошибке.
  * В классе ищется функция +Аction(Action|Cli|Block|...)+ в зависимости от способа вызова. Если функции нет, то вызывается функция +index+ с указанным суффиксом.
  * Остальные компоненты передаются как параметры функции.
  * У контроллера по умолчанию в действие по умолчанию (+index/index+) не может быть параметров - если они есть, то выдается 404

Получается, что ни при каких обстоятельствах нельзя получить ошибку 404 - все несуществующие страницы будут
отправлены на действие по умолчанию (+default/index/index+), однако есть опция +$config[\'QFW'][\'auto404']+, и если она установлена,
то на все запросы пришедшие на действие по умолчанию кромя запроса к корню будет выдана страница 404.

Несколько примеров.

.Разбор обычного URI вызванного через http
=====================================================================
  http://example.com/forum/topic/123

+application/forum/TopicContriller.php+:

[source,php]
---------------------------------------------
//...
class TopicContriller
{
	//...
	indexAction($number)
	{
		die($number);
	}
	//...
}
---------------------------------------------
Результат:

  123

=====================================================================

.Подстановка параметров по умолчанию
=====================================================================
  http://example.com/register/

+application/default/RegisterContriller.php+:

[source,php]
---------------------------------------------
//...
class RegisterContriller
{
	//...
	indexAction()
	{
		echo 'Регистрация';
	}
	//...
}
---------------------------------------------
Результат:

  Регистрация

=====================================================================

.Параметры по умолчанию
=====================================================================
  http://example.com/asdf/gffa

+application/default/IndexContriller.php+:

[source,php]
---------------------------------------------
//...
class IndexContriller
{
	//...
	indexAction($p1, $p2)
	{
		echo $p1, $p2;
	}
	//...
}
---------------------------------------------
Результат при включенной опции +$config[\'QFW'][\'auto404']+:

  Указаны параметры у дефолтового CA
  или несуществующий Контроллер или Экшен дефолтового контроллера

Результат при выключенной опции +$config[\'QFW'][\'auto404']+:

  asdfgffa

=====================================================================

.Вызов из консоли
=====================================================================
  php cron/start.php cron/parce

+application/default/CronContriller.php+:

[source,php]
---------------------------------------------
//...
class CronContriller
{
	//...
	parceCli()
	{
		echo 'Обработка...';
	}
	//...
}
---------------------------------------------
Результат:

  Обработка...

=====================================================================

