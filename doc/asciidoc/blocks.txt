Блоки
-----

Что представляет собой блок?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Часто на сайтах есть куски страницы со своей логикой построения - независимые от других частей страницы.
Не будем рассматривать случай, когда такой блок вставляется на страницу с помощью iframe - он применим далеко не всегда.

Примерами таких блоков могут быть:

 - Форма логина и отображения текущего пользователя
 - Блок погоды или новостей
 - Списки лучших пользователей/Top100
 - Формы поиска
 - Блоки партнерских сайтов (например знакомства)

Отличительной чертой этих блоков является то, что технически они представляют собой отдельный кусок PHP кода для генерации и свой шаблон.
В традиционной модели MVC в каждом контроллере, который отображает этот блок нужно вызвать функцию для генерации данных для блока и после подключить шаблон блока в шаблон страницы, генерируемой контроллером.

Блок позволяет использовать "подстраницы" - из шаблонизатора вызывается генерация новой страницы, которая подставляется на место вызова. Блок генерируется по тем-же самым правилам, что и обычная страница.

Вызов блока
~~~~~~~~~~~

Синтаксис вызова блока зависит от шаблонизатора, рассмотрим на примере PlainPHP: #TODO link to PlainPHP

[source, php]
-----------------------------------------------------
<div id="menu"><?php echo $this->block('nav/menu', $curPage); ?></div>
-----------------------------------------------------

[source, php]
-----------------------------------------------------
class NavController
{
	public function menuBlock($curPage)
	{
		return 'меню';
	}
}
-----------------------------------------------------
Результат:

  <div id="menu">меню</div>

Также есть вариант передачи параметров через / как в URI, тоесть такой вызов тоже корректный

[source, php]
-----------------------------------------------------
<div id="menu"><?php echo $this->block('nav/menu/'.$curPage); ?></div>
-----------------------------------------------------

Такой вызов может применяться в других шаблонизаторах - он более совместим, но через него можно передать только строки.

